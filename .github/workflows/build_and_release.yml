name: Build and Release

on:
  push:
    branches: 
    - '**'
  pull_request:
    branches: [ master ]
  workflow_dispatch: # Allows manual triggering
    inputs:
      tag:
        description: 'Tag name'     
        required: true
      note:
        description: 'Release note'
        
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Build
        run: |
          npm i -g @vercel/ncc
          npm i @actions/github
          npm run build
      #- name: Commit
      #  run: |
      #    git config --global user.name 'juhasauna'
      #    git config --global user.email 'juha.saunaaho@gmail.com'
      #    git commit --allow-empty -am "dist build"
      #    git push

  test:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Test index.js
        env:
          INPUT_GITHUB_USERNAME: "juhasauna"
          INPUT_GITHUB_TOKEN: ${{ secrets.ACTIONSECRET2025 }}
          INPUT_TARGET_REPOS: '[juhasauna/activity-log]'
          INPUT_OUTPUT_STYLE: MARKDOWN
          INPUT_IGNORE_EVENTS: '[]'
          INPUT_README_PATH: README.md
          INPUT_COMMIT_MESSAGE: Update README.md
          INPUT_EVENT_LIMIT: '100'
        run: node ./dist/index.js

  release:
    runs-on: ubuntu-latest
    needs: test
    environment: dev
    steps:
      - uses: actions/checkout@v4
      #- name: Pull latest
      #  run: |
      #    git config --global user.name 'juhasauna'
      #    git config --global user.email 'juha.saunaaho@gmail.com'
      #    git pull
      - name: Set Git user
        run: |
          git config user.name 'juhasauna'
          git config user.email 'juha.saunaaho@gmail.com'
      - name: Tag it
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="v$(date +'%Y%m%d-%H%M%S')"
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "Using tag: $TAG"

      - name: Create and push tag
        run: |
          git tag -a "$TAG" -m "${{ github.event.inputs.note || 'Automatic release' }}"
          git push origin "$TAG"
      - name: Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          body: ${{ inputs.note }}
          draft: false
          prerelease: false
